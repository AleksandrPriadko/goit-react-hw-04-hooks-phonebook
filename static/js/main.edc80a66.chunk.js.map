{"version":3,"sources":["components/PhoneBookForm/PhoneBooksForm.jsx","components/PhoneBookForm/PhoneBook.jsx","components/Contacts/FindContacts.jsx","components/Contacts/ContactsList.jsx","components/Contacts/Contacts.jsx","App.js","index.js","components/PhoneBookForm/Styles.module.scss","components/Contacts/Style.module.scss"],"names":["PhoneBooksForm","handleChange","handleSubmit","state","name","number","className","styles","form","onSubmit","label","type","value","placeholder","pattern","title","required","onChange","input","button","INITIAL_STATE","PhoneBook","useState","setState","target","prev","event","preventDefault","newContact","id","uuidv4","Number","FindContacts","filter","handleFilter","onInput","autoComplete","ContactsList","contacts","deleteContact","map","contact","onClick","Contacts","App","setContacts","setFilter","useEffect","localStorage","getItem","contactsParsed","JSON","parse","length","setItem","stringify","removeItem","visebleContacts","toLocaleLowerCase","includes","data","some","alert","prevState","contactId","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.edc80a66.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport styles from \"./Styles.module.scss\";\r\n\r\nexport default function PhoneBooksForm({ handleChange, handleSubmit, state }) {\r\n  const { name, number } = state;\r\n  return (\r\n    <form className={styles.form} onSubmit={handleSubmit}>\r\n      <label className={styles.label}>\r\n        <span>Name</span>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          placeholder=\"John Doe\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChange}\r\n          className={styles.input}\r\n        />\r\n      </label>\r\n      <label className={styles.label}>\r\n        <span>Number</span>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          placeholder=\"+38...\"\r\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChange}\r\n          className={styles.input}\r\n        />\r\n      </label>\r\n      <button className={styles.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nPhoneBooksForm.propTypes = {\r\n  state: PropTypes.object.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n};\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\nimport PhoneBooksForm from \"./PhoneBooksForm\";\r\nimport { useState } from \"react\";\r\n\r\nconst INITIAL_STATE = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nexport default function PhoneBook({ onSubmit }) {\r\n  const [state, setState] = useState(INITIAL_STATE);\r\n\r\n  const { name, number } = state;\r\n\r\n  const handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    setState((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const newContact = {\r\n      id: uuidv4(),\r\n      name,\r\n      number: Number(number),\r\n    };\r\n    onSubmit(newContact);\r\n    setState(INITIAL_STATE);\r\n  };\r\n\r\n  return (\r\n    <PhoneBooksForm\r\n      handleChange={handleChange}\r\n      handleSubmit={handleSubmit}\r\n      state={state}\r\n    />\r\n  );\r\n}\r\n\r\nPhoneBook.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n","import styles from \"./Style.module.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function FindContacts({ filter, handleFilter }) {\r\n  return (\r\n    <div>\r\n      <h3>Find contacts by name</h3>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        required\r\n        onInput={handleFilter}\r\n        className={styles.input}\r\n        autoComplete=\"off\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nFindContacts.propTypes = {\r\n  filter: PropTypes.string,\r\n  handleFilter: PropTypes.func.isRequired,\r\n};\r\n","import styles from \"./Style.module.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function ContactsList({ contacts, deleteContact }) {\r\n  return (\r\n    <ul className={styles.contacts}>\r\n      {contacts.map(({ id, name, number }) => {\r\n        return (\r\n          <li key={id} className={styles.contact}>\r\n            <span>{name}</span>\r\n            <span>{number}</span>\r\n            <button className={styles.button} onClick={() => deleteContact(id)}>\r\n              X\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  deleteContact: PropTypes.func,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport FindContacts from \"./FindContacts\";\r\nimport ContactsList from \"./ContactsList\";\r\n\r\nexport default function Contacts({\r\n  contacts,\r\n  filter,\r\n  onChange,\r\n  deleteContact,\r\n}) {\r\n  return (\r\n    <div>\r\n      <h2>Contacts</h2>\r\n      <FindContacts filter={filter} handleFilter={onChange} />\r\n\r\n      <ContactsList contacts={contacts} deleteContact={deleteContact} />\r\n    </div>\r\n  );\r\n}\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.array,\r\n  deleteContact: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport AddContactForm from \"./components/PhoneBookForm\";\r\nimport Contacts from \"./components/Contacts\";\r\n\r\nexport default function App() {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const contact = localStorage.getItem(\"contact\");\r\n    const contactsParsed = JSON.parse(contact);\r\n\r\n    if (contactsParsed) {\r\n      setContacts(contactsParsed);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!contacts.length) {\r\n      localStorage.removeItem(\"contact\");\r\n      return;\r\n    }\r\n\r\n    localStorage.setItem(\"contact\", JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const addNewContact = (data) => {\r\n    const { name, number } = data;\r\n\r\n    const newContact = {\r\n      id: uuidv4(),\r\n      name: name,\r\n      number: Number(number),\r\n    };\r\n    if (contacts.some((contact) => contact.name === name)) {\r\n      alert(`${name} is already in contacts!`);\r\n    } else {\r\n      setContacts((prevState) => [...prevState, newContact]);\r\n    }\r\n  };\r\n\r\n  const changeFilter = ({ target }) => {\r\n    const { value } = target;\r\n    setFilter(value);\r\n  };\r\n\r\n  const deleteContact = (contactId) => {\r\n    setContacts((prevState) =>\r\n      prevState.filter((contact) => contact.id !== contactId)\r\n    );\r\n  };\r\n\r\n  const visebleContacts = contacts.filter(({ name, number }) => {\r\n    return name.toLocaleLowerCase().includes(filter.toLocaleLowerCase());\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <h1>Phonebook</h1>\r\n      <div className=\"container\">\r\n        <AddContactForm onSubmit={addNewContact} />\r\n        <Contacts\r\n          contacts={visebleContacts}\r\n          filter={filter}\r\n          onChange={changeFilter}\r\n          deleteContact={deleteContact}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./styles.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Styles_input__2yRqc\",\"label\":\"Styles_label__3DtF6\",\"button\":\"Styles_button__3b5NY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Style_input__2DowU\",\"contacts\":\"Style_contacts__1sFtp\",\"contact\":\"Style_contact__3Ji_-\",\"button\":\"Style_button__4ynNn\"};"],"sourceRoot":""}